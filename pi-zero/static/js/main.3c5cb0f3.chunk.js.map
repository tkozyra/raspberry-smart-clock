{"version":3,"sources":["components/dayOfTheWeekSwitch/style.js","components/dayOfTheWeekSwitch/index.js","components/newAlarm/style.js","components/newAlarm/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","DayOfTheWeekSwitch","checked","handleChange","name","label","Switch","onChange","color","inputProps","DaysOfTheWeekContainer","NewAlarm","useState","open","setOpen","Date","time","setTime","Mo","Tu","We","Th","Fr","Sa","Su","daysOfTheWeek","setDaysOfTheWeek","event","target","addAlarm","a","alarm","toLocaleTimeString","console","log","toISOString","slice","fetch","method","mode","headers","body","JSON","stringify","response","handleClose","reason","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","ampm","openTo","views","inputFormat","mask","value","newValue","renderInput","params","TextField","margin","Button","onClick","Snackbar","autoHideDuration","onClose","Alert","severity","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c5cb0f3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import Switch from \"@material-ui/core/Switch\";\r\nimport { Container } from \"./style\";\r\n\r\nfunction DayOfTheWeekSwitch({ checked, handleChange, name, label }) {\r\n  return (\r\n    <Container>\r\n      {label}\r\n      <Switch\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        color=\"primary\"\r\n        name={name}\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DayOfTheWeekSwitch;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DaysOfTheWeekContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin: 1em;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import { Alert, Button, Snackbar } from \"@material-ui/core\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\r\nimport TimePicker from \"@material-ui/lab/TimePicker\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DayOfTheWeekSwitch from \"../dayOfTheWeekSwitch\";\r\nimport { Container, DaysOfTheWeekContainer } from \"./style\";\r\n\r\nfunction NewAlarm() {\r\n  const [open, setOpen] = useState(false);\r\n  const [time, setTime] = useState(new Date());\r\n  const [daysOfTheWeek, setDaysOfTheWeek] = useState({\r\n    Mo: false,\r\n    Tu: false,\r\n    We: false,\r\n    Th: false,\r\n    Fr: false,\r\n    Sa: false,\r\n    Su: false,\r\n  });\r\n  const URL = \"http://raspberrypi.local\";\r\n\r\n  const handleChange = (event) => {\r\n    setDaysOfTheWeek({\r\n      ...daysOfTheWeek,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const addAlarm = async () => {\r\n    setOpen(false);\r\n    const alarm = {\r\n      // time: time.toISOString().slice(0, 19),\r\n      time: time.toLocaleTimeString(),\r\n      daysOfTheWeek: daysOfTheWeek,\r\n    };\r\n    console.log(new Date().toISOString().slice(0, 19));\r\n    console.log(alarm);\r\n\r\n    // const response = await fetch(`${URL}/set?time=${alarm.time}&Mo=1`, {\r\n    //   method: \"GET\",\r\n    //   mode: \"no-cors\",\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   // body: JSON.stringify(alarm),\r\n    // });\r\n\r\n    const response = await fetch(`${URL}/set2?time=${alarm.time}`, {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(alarm),\r\n    });\r\n    //2021-05-18T23:29:05Z\r\n    setOpen(true);\r\n\r\n    console.log(response);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>New alarm</h1>\r\n\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <Container>\r\n          <TimePicker\r\n            ampm={false}\r\n            openTo=\"hours\"\r\n            views={[\"hours\", \"minutes\", \"seconds\"]}\r\n            inputFormat=\"HH:mm:ss\"\r\n            mask=\"__:__:__\"\r\n            label=\"Select time\"\r\n            value={time}\r\n            onChange={(newValue) => {\r\n              setTime(newValue);\r\n            }}\r\n            renderInput={(params) => <TextField {...params} margin=\"normal\" />}\r\n          />\r\n        </Container>\r\n      </LocalizationProvider>\r\n\r\n      <DaysOfTheWeekContainer>\r\n        <DayOfTheWeekSwitch\r\n          checked={daysOfTheWeek.Mo}\r\n          handleChange={handleChange}\r\n          name=\"Mo\"\r\n          label=\"Mon\"\r\n        />\r\n        <DayOfTheWeekSwitch\r\n          checked={daysOfTheWeek.Tu}\r\n          handleChange={handleChange}\r\n          name=\"Tu\"\r\n          label=\"Tue\"\r\n        />\r\n        <DayOfTheWeekSwitch\r\n          checked={daysOfTheWeek.We}\r\n          handleChange={handleChange}\r\n          name=\"We\"\r\n          label=\"Wed\"\r\n        />\r\n        <DayOfTheWeekSwitch\r\n          checked={daysOfTheWeek.Th}\r\n          handleChange={handleChange}\r\n          name=\"Th\"\r\n          label=\"Thu\"\r\n        />\r\n        <DayOfTheWeekSwitch\r\n          checked={daysOfTheWeek.Fr}\r\n          handleChange={handleChange}\r\n          name=\"Fr\"\r\n          label=\"Fri\"\r\n        />\r\n        <DayOfTheWeekSwitch\r\n          checked={daysOfTheWeek.Sa}\r\n          handleChange={handleChange}\r\n          name=\"Sa\"\r\n          label=\"Sat\"\r\n        />\r\n        <DayOfTheWeekSwitch\r\n          checked={daysOfTheWeek.Su}\r\n          handleChange={handleChange}\r\n          name=\"Su\"\r\n          label=\"Sun\"\r\n        />\r\n      </DaysOfTheWeekContainer>\r\n      <Button onClick={addAlarm}>Save alarm</Button>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Alarm has been set successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NewAlarm;\r\n","import NewAlarm from \"./components/newAlarm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NewAlarm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}